geom_bar(mapping = aes(x = cut))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = clarity))
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(color = class)) +
geom_smooth(se = FALSE) +
labs(
title = "Fuel efficiency generally decreases with engine size",
subtitle = "Two seaters (sports cars) are an exception because of their light weight",
caption = "Data from fueleconomy.gov"
)
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(color = class)) +
geom_smooth(se = FALSE) +
labs(
title = "Fuel efficiency generally decreases with engine size",
subtitle = "Two seaters (sports cars) are an exception because of their light weight",
caption = "Data from fueleconomy.gov",
x = "Engine displacement (L)",
y = "Highway fuel economy (mpg)",
colour = "Car type"
)
manufacturer <- mpg$manufacturer
total_cars = as.data.frame(count(mpg, manufacturer, y=1))
ggplot(mpg, aes(x=manufacturer)) +
geom_bar(aes(fill=class), position="fill") +
scale_y_continuous(name="proportion") +
geom_text(data=total_cars, aes(x=manufacturer, y=y, label=n), size=4, vjust = -0.2)
clarity <- diamonds$clarity
totals = as.data.frame(count(diamonds, clarity, y=1))
ggplot(diamonds, aes(x=clarity)) +
geom_bar(aes( fill=cut), position="fill") +
scale_y_continuous(name="proportion") +
geom_text(data=totals, aes(x=clarity, y=y, label=n), size=4, vjust = -0.2)
clarity <- diamonds$clarity
totals = as_data_frame(count(diamonds, clarity, y=1))
ggplot(diamonds, aes(x=clarity)) +
geom_bar(aes( fill=cut), position="fill") +
scale_y_continuous(name="proportion") +
geom_text(data=totals, aes(x=clarity, y=y, label=n), size=4, vjust = -0.2)
knitr::opts_chunk$set(echo = TRUE, error=FALSE, message=FALSE, fig.height = 5, fig.width = 5)
library("tidyverse")
library("magick")
library("leaflet")
library("plotly")
?mpg
head(mpg)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data= mpg) + geom_point(mapping = aes(x=cyl, y=hwy))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = class))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = drv))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ class, nrow = 2)
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid(class ~ cyl)
ggplot(data = mpg) +
geom_point(mapping = aes(x = class, y = cyl))
head(diamonds)
ggplot(data = diamonds) +
geom_point(mapping = aes(x = carat, y = price, color=cut)) + facet_wrap(~cut, nrow=2)
ggplot(data = diamonds) +
geom_point(mapping = aes(x = carat, y = price, color=cut)) +
geom_smooth(mapping = aes(x = carat, y = price))
ggplot(data = diamonds, mapping = aes(x = carat, y = price)) +
geom_point(aes(color=cut)) +
geom_smooth()
ggplot(data = diamonds) +
geom_point(mapping = aes(x = carat, y = price, color=clarity)) +
geom_smooth(mapping = aes(x = carat, y = price))
ggplot(data =diamonds, mapping = aes(carat, price)) + geom_point(mapping = aes(color=clarity, alpha=1/5), position="jitter") + geom_smooth()
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = clarity))
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(color = class)) +
geom_smooth(se = FALSE) +
labs(
title = "Fuel efficiency generally decreases with engine size",
subtitle = "Two seaters (sports cars) are an exception because of their light weight",
caption = "Data from fueleconomy.gov"
)
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(color = class)) +
geom_smooth(se = FALSE) +
labs(
title = "Fuel efficiency generally decreases with engine size",
subtitle = "Two seaters (sports cars) are an exception because of their light weight",
caption = "Data from fueleconomy.gov",
x = "Engine displacement (L)",
y = "Highway fuel economy (mpg)",
colour = "Car type"
)
manufacturer <- mpg$manufacturer
total_cars = as.data.frame(count(mpg, manufacturer, y=1))
ggplot(mpg, aes(x=manufacturer)) +
geom_bar(aes(fill=class), position="fill") +
scale_y_continuous(name="proportion") +
geom_text(data=total_cars, aes(x=manufacturer, y=y, label=n), size=4, vjust = -0.2)
clarity <- diamonds$clarity
totals = as_data_frame(count(diamonds, clarity, y=1))
ggplot(diamonds, aes(x=clarity)) +
geom_bar(aes( fill=cut), position="fill") +
scale_y_continuous(name="proportion") +
geom_text(data=totals, aes(x=clarity, y=y, label=n), size=4, vjust = -0.2)
manufacturer <- mpg$manufacturer
total_cars = as_data_frame(count(mpg, manufacturer, y=1))
ggplot(mpg, aes(x=manufacturer)) +
geom_bar(aes(fill=class), position="fill") +
scale_y_continuous(name="proportion") +
geom_text(data=total_cars, aes(x=manufacturer, y=y, label=n), size=4, vjust = -0.2)
install.packages("tidyverse")
library(tidyverse)
install.packages("tidyverse")
?mpg
head(mpg)
head(mpg)
head(mpg)
mpg
head(mpg)
mpg
diamons
diamonds
knitr::opts_chunk$set(echo = TRUE, error=FALSE, message=FALSE, fig.height = 5, fig.width = 5)
library("tidyverse")
library("leaflet")
library("plotly")
library("rbokeh")
attach(mtcars)
plot(wt, mpg, main="Scatterplot Example",
xlab="Car Weight ", ylab="Miles Per Gallon ", pch=19)
?mpg
head(mpg)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy))
knitr::opts_chunk$set(echo = TRUE, error=FALSE, message=FALSE, fig.height = 5, fig.width = 5)
library("tidyverse")
library("leaflet")
library("plotly")
library("rbokeh")
data(citytemp)
hc <- highchart() %>%
hc_xAxis(categories = citytemp$month) %>%
hc_add_series(name = "Tokyo", data = citytemp$tokyo) %>%
hc_add_series(name = "London", data = citytemp$london) %>%
hc_add_series(name = "Other city",
data = (citytemp$tokyo + citytemp$london)/2)
data(citytemp)
hc <- highchart() %>%
hc_xAxis(categories = citytemp$month) %>%
hc_add_series(name = "Tokyo", data = citytemp$tokyo) %>%
hc_add_series(name = "London", data = citytemp$london) %>%
hc_add_series(name = "Other city",
data = (citytemp$tokyo + citytemp$london)/2)
knitr::opts_chunk$set(echo = TRUE, error=FALSE, message=FALSE, fig.height = 5, fig.width = 5)
library("tidyverse")
library("leaflet")
library("plotly")
library("rbokeh")
attach(mtcars)
plot(wt, mpg, main="Scatterplot Example",
xlab="Car Weight ", ylab="Miles Per Gallon ", pch=19)
?mpg
head(mpg)
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy))
---
title: "Data Visualization with R"
author: "Alison Blaine, Nushrat Khan & Heidi Tebbe"
date: "7/11/2017"
output:
html_document:
keep_md: true
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, error=FALSE, message=FALSE, fig.height = 5, fig.width = 5)
```
```{r echo=FALSE}
library("tidyverse")
library("leaflet")
library("plotly")
library("rbokeh")
```
---
title: "Data Visualization with R"
author: "Alison Blaine, Nushrat Khan & Heidi Tebbe"
date: "7/11/2017"
output:
html_document:
keep_md: true
---
install.packages("rmarkdown", lib="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
install.packages("rmarkdown", lib = "/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
install.packages("rmarkdown", lib = "/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
install.packages("rmarkdown", lib = "/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
install.packages("rmarkdown", lib = "/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
install.packages("rmarkdown", lib = "/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
---
title: "Data Visualization with R"
author: "Alison Blaine, Nushrat Khan & Heidi Tebbe"
date: "7/11/2017"
output:
html_document:
keep_md: true
---
---
title: "Data Visualization with R"
author: "Alison Blaine, Nushrat Khan & Heidi Tebbe"
date: "7/11/2017"
output:
html_document:
keep_md: true
---
knitr::opts_chunk$set(echo = TRUE, error=FALSE, message=FALSE, fig.height = 5, fig.width = 5)
---
title: "Data Visualization with R"
author: "Alison Blaine, Nushrat Khan & Heidi Tebbe"
date: "7/11/2017"
output:
html_document:
keep_md: true
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, error=FALSE, message=FALSE, fig.height = 5, fig.width = 5)
```
```{r echo=FALSE}
library("tidyverse")
library("leaflet")
library("plotly")
library("rbokeh")
```
## Workshop goals
* learn about various packages for making data visualizations in R
* be able to determine which package to use
* understand basic syntax for the most popular package: ggplot2
* gain hands-on practice making visualizations in ggplot2
## What you will need
* [installation of R (version 3.3.2 or newer)](http://archive.linux.duke.edu/cran/)
* [RStudio](https://www.rstudio.com/products/rstudio/download/) - select the free version
* [this script](https://drive.google.com/open?id=0Bz7G_jKybSBsUXlzTGZoVlpYQlU) -download it and open in RStudio
## What is R?
R is a software environment for statistical computing and graphics. Using R you can do rigorous statistical analysis, clean and manipulate data, and create publication-quality graphics.
![](images/Plot_Mapping_All.png)
**These components make up a graph.**
<img src="images/grammar-example.png" style="width: 500px;"/>
knitr::opts_chunk$set(echo = TRUE, error=FALSE, message=FALSE, fig.height = 5, fig.width = 5)
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy))
knitr::opts_chunk$set(echo = TRUE, error=FALSE, message=FALSE, fig.height = 5, fig.width = 5)
library("tidyverse")
library("highcharter")
library("leaflet")
library("plotly")
library("rbokeh")
?mpg
head(mpg)
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy))
knitr::opts_chunk$set(echo = TRUE, fig.width=5, fig.height=5, error=FALSE, message=FALSE)
attach(mtcars)
hist(mpg)
ggplot(mtcars, aes(x=mpg)) + geom_histogram()
ggplot(mtcars, aes(x=mpg)) + geom_histogram()
ggplot(mtcars, aes(x=mpg)) + geom_histogram()
ggplot(mtcars, aes(x=mpg)) + geom_histogram()
library("tidyverse")
library("highcharter")
library("leaflet")
library("plotly")
library("rbokeh")
attach(mtcars)
hist(mpg)
ggplot(mtcars, aes(x=mpg)) + geom_histogram()
ggplot(mtcars, aes(x=mpg, fill=class)) + geom_histogram()
ggplot(mtcars, aes(x=mpg)) + geom_histogram()
ggplot(mtcars, aes(x=hwy)) + geom_histogram()
ggplot(mtcars, aes(x=mpg)) + geom_histogram()
ggplot(mtcars, aes(x=mpg, binwidth=40)) + geom_histogram()
ggplot(mtcars, aes(x=mpg, binwidth=50)) + geom_histogram()
ggplot(mtcars, aes(x=mpg, binwidth=range/50)) + geom_histogram()
ggplot(mtcars, aes(x=mpg)) + geom_histogram()
ggplot(mtcars, aes(x=mpg)) + geom_histogram(binwidth=.5, color="black", fill="white")
ggplot(mtcars, aes(x=mpg)) + geom_histogram(binwidth=.5, color="black", fill="white") + geom_density(alpha=.2, fill="#FF6666"))
ggplot(mtcars, aes(x=mpg)) + geom_histogram(binwidth=.5, color="black", fill="white") + geom_density(alpha=.2, fill="#FF6666")
ggplot(mtcars, aes(x=mpg)) + geom_histogram(binwidth=1, color="black", fill="white") + geom_density(alpha=.2, fill="#FF6666")
ggplot(mtcars, aes(x=mpg)) + geom_histogram(binwidth=1, color="red", fill="white") + geom_density(alpha=.2, fill="#FF6666")
ggplot(mtcars, aes(x=mpg)) + geom_histogram(binwidth=1, color="red", fill="red") + geom_density(alpha=.2, fill="#FF6666")
ggplot(mtcars, aes(x=mpg)) + geom_histogram(binwidth=1, color="red", fill="white") + geom_density(alpha=.2, fill="#FF6666")
ggplot(mtcars, aes(x=mpg)) + geom_histogram(binwidth=1, color="magenta", fill="white") + geom_density(alpha=.2, fill="#FF6666")
ggplot(mtcars, aes(x=mpg)) + geom_histogram(binwidth=1, color="black", fill="white") + geom_density(alpha=.2, fill="#FF6666")
ggplot(mtcars, aes(x=mpg)) + geom_histogram(binwidth=1, color="black", fill="white")
library("tidyverse")
library("highcharter")
library("leaflet")
library("plotly")
library("rbokeh")
knitr::opts_chunk$set(echo = TRUE, error=FALSE, message=FALSE, fig.height = 5, fig.width = 5)
library("tidyverse")
library("highcharter")
library("leaflet")
library("plotly")
library("rbokeh")
attach(mtcars)
hist(mpg)
ggplot(mtcars, aes(x=mpg)) + geom_histogram(binwidth=1, color="black", fill="white")
data(citytemp)
hc <- highchart() %>%
hc_xAxis(categories = citytemp$month) %>%
hc_add_series(name = "Tokyo", data = citytemp$tokyo) %>%
hc_add_series(name = "London", data = citytemp$london) %>%
hc_add_series(name = "Other city",
data = (citytemp$tokyo + citytemp$london)/2)
hc
m <- leaflet(options = leafletOptions(zoomControl = FALSE, dragging=FALSE, minZoom = 15, maxZoom = 15)) %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=-78.6697, lat=35.7876,
popup="Hello World!")
m  # Print the map
p <- plot_ly(economics, x = ~date, y = ~unemploy / pop)
p
h <- figure(width = 600, height = 400) %>%
ly_hist(eruptions, data = faithful, breaks = 40, freq = FALSE) %>%
ly_density(eruptions, data = faithful)
h
?mpg
head(mpg)
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy))
knitr::opts_chunk$set(echo = TRUE, fig.width=5, fig.height=5, error=FALSE, message=FALSE)
library("tidyverse")
library("highcharter")
library("leaflet")
library("plotly")
library("rbokeh")
attach(mtcars)
hist(mpg)
ggplot(mtcars, aes(x=mpg)) + geom_histogram(binwidth=1, color="black", fill="white")
data(citytemp)
hc <- highchart() %>%
hc_xAxis(categories = citytemp$month) %>%
hc_add_series(name = "Tokyo", data = citytemp$tokyo) %>%
hc_add_series(name = "London", data = citytemp$london) %>%
hc_add_series(name = "Other city",
data = (citytemp$tokyo + citytemp$london)/2)
hc
m <- leaflet(options = leafletOptions(zoomControl = FALSE, dragging=FALSE, minZoom = 15, maxZoom = 15)) %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=-78.6697, lat=35.7876,
popup="Hello World!")
m  # Print the map
p <- plot_ly(economics, x = ~date, y = ~unemploy / pop)
p
h <- figure(width = 600, height = 400) %>%
ly_hist(eruptions, data = faithful, breaks = 40, freq = FALSE) %>%
ly_density(eruptions, data = faithful)
h
?mpg
head(mpg)
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg, aes(mapping = aes(x = displ, y = hwy) + geom_point()
ggplot(data = mpg, aes(x = displ, y = hwy) + geom_point()
ggplot(data = mpg, aes(x = displ, y = hwy)) + geom_point()
ggplot(mpg, aes(x = displ, y = hwy)) + geom_point()
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy))
mpg
mpg$year
mtcars
ggplot(data = mtcars) + geom_point(mapping = aes(x = displ, y = hwy))
?mpg
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy))
mpg
search()
hist(mpg$cyl)
detach(mtcars)
ggplot(mtcars, aes(x=mpg)) + geom_histogram(binwidth=1, color="black", fill="white")
search()
mpg
hist(mtcars$mpg)
ggplot(mtcars, aes(x=mpg)) + geom_histogram(binwidth=1, color="black", fill="white")
search()
library(tidyverse)
library(tidyverse)
?mpg
head(mpg)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data=mpg) + geom_point(mapping= aes(x = cyl, y = hwy))
ggplot(data=mpg) + geom_point(mapping= aes(x = cyl, y = hwy))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = class))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = class)) + theme_classic()
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = drv))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, shape = drv))
size = drv)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, size = drv)
# 8. Facet_wrap() creates subplots. Run this code to see what faceting does:
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ class, nrow = 2)
# 9. Practice Faceting. Substitute out class for another variable
# in the dataset. Ex: trans, drive, or cyl. Run the code!
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ class, nrow = 2)
# 10. Facet grids allow for an extra dimension of faceting. Run this code to see what facet_grid() does:
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid(class ~ cyl)
# Compare above result with the code below. What do the empty cells in the above graph mean?
ggplot(data = mpg) +
geom_point(mapping = aes(x = class, y = cyl))
# 11. Apply what you have learned! Create a chart with the diamonds data set using ggplot2.
# Get to know the dataset first using ?diamonds and head(diamonds) commands
# Decide on aesthetic mappings and whether you want to facet your chart.
# Type the code below:
?diamonds
head(diamonds)
# 12. Adding multiple layers to a graph. Run this code:
ggplot(data = diamonds) +
geom_point(mapping = aes(x = carat, y = price, color=cut)) +
geom_smooth(mapping = aes(x = carat, y = price))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, size = drv))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ class, nrow = 2)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ class, nrow = 2, scale="free")
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ cyl, nrow = 2)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid(class ~ cyl)
ggplot(data = mpg) +
geom_point(mapping = aes(x = class, y = cyl))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid(class ~ cyl)
ggplot(data = mpg) +
geom_point(mapping = aes(x = class, y = cyl))
?geom_smooth
?diamonds
head(diamonds)
?geom_smooth
ggplot(data = diamonds) +
geom_point(mapping = aes(x = carat, y = price, color=cut)) +
geom_smooth(mapping = aes(x = carat, y = price))
ggplot(data = diamonds, mapping = aes(x = carat, y = price)) +
geom_point(aes(color=cut)) +
geom_smooth()
ggplot(data = diamonds) +
geom_point(mapping = aes(x = carat, y = price, color=clarity)) +
geom_smooth(mapping = aes(x = carat, y = price))
ggplot(data =diamonds, mapping = aes(carat, price)) +
geom_point(mapping = aes(color=clarity, alpha=1/5), position="jitter") +
geom_smooth()
?geom_bar
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = clarity))
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(color = class)) +
geom_smooth(se = FALSE) +
labs(
title = "Fuel efficiency generally decreases with engine size",
subtitle = "Two seaters (sports cars) are an exception because of their light weight",
caption = "Data from fueleconomy.gov"
)
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(color = class)) +
geom_smooth(se = FALSE) +
labs(
title = "Fuel efficiency generally decreases with engine size",
subtitle = "Two seaters (sports cars) are an exception because of their light weight",
caption = "Data from fueleconomy.gov",
x = "Engine Displacement",
y = "Highway Fuel Economy",
color = "Car Type"
)
my_graph <-ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(color = class)) +
geom_smooth(se = FALSE) +
labs(
title = "Fuel efficiency generally decreases with engine size",
subtitle = "Two seaters (sports cars) are an exception because of their light weight",
caption = "Data from fueleconomy.gov",
x = "Engine displacement (L)",
y = "Highway fuel economy (mpg)",
colour = "Car type"
)
my_graph
ggsave("graph.png", my_graph)
ggsave("graph_resized.png", my_graph, width = 5, height = 4, units = "in")
ggsave("graph.tiff", my_graph, width=5, height=5, units="in", dpi=600)
total_cars = as.data.frame(count(mpg, manufacturer=mpg$manufacturer, y=1))
total_cars
ggplot(mpg, aes(x=manufacturer)) +
geom_bar(aes(fill=class), position="fill") +
scale_y_continuous(name="proportion") +
geom_text(data=total_cars, aes(x=manufacturer, y=y, label=n), size=4, vjust = -0.2)
total_cars = as.data.frame(count(mpg, manufacturer=mpg$manufacturer, y=1))
