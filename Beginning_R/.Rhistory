?Comparison
filter(cran, r_version <= "3.0.2", country == "India")
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3, 5, NA, 10))
!is.na(c(3, 5, NA, 10))
filter(cran, !is.na(r_version))
cran2 <- select(size, ip_id)
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id)
)
arrange(cran2, package, ip_id)
shiny::runApp('shinymlr-test')
devtools::install_github("mlr-org/shinyMlr/package")
devtools::install_github("mlr-org/shinyMlr/package")
setwd("~/Downloads/shinyMlr-master")
runApp()
runApp()
?read_csv
## Get the list of installed packages
installed <- dir(.libPaths())
head(installed)
head(installed, 30)
pwd
getwd()
? .libPaths
.Library
list_dir <- '/Library/Frameworks/R.framework/Resources/library'
## Change accordingly
list_dir <- '/Users/ablaine/Library/Frameworks/R.framework/Resources/library'
## Change accordingly
list_dir <- '/Users/ablaine/Library/Frameworks/R.framework/Resources/library'
## Get the list of installed packages
installed <- dir(.libPaths())
## Save the list for later use
save(installed, file = file.path(list_dir, paste0(Sys.Date(), '-installed.Rdata')))
## Explore the list
head(installed)
## Change accordingly
list_dir <- '/Users/ablaine/Library/Frameworks/R/Resources/library'
## Get the list of installed packages
installed <- dir(.libPaths())
## Save the list for later use
save(installed, file = file.path(list_dir, paste0(Sys.Date(), '-installed.Rdata')))
## Explore the list
head(installed)
save(installed, file = file.path(list_dir, paste0(Sys.Date(), '-installed.Rdata')))
.Library
getwd()
installed
library(rJava)
install.packages("RWeka")
library(RWeka)
dyn.load('/Library/Java/JavaVirtualMachines/jdk1.8.0_144.jdk/Contents/Home/jre/lib/server/libjvm.dylib')
require(rJava)
install.packages("rJava")
java -version
require(rJava)
require(rJava)
library(rJava)
library(RWeka)
install.packages("tidyverse")
install.packages("RWeka")
library(RWeka)
install.packages(rJava)
install.packages("rJava")
library(rJava)
library(RWeka)
trees
mtcars
# 2. To see more datasets built into R, run the next line of code:
data()
# 8. Display the structure of mtcars using str()
# This is useful for seeing the data types of each variable.
str(mtcars)
# 9. See the class of mtcars using class().
class(mtcars)
# 9. See what type of R object mtcars is using class().
class(mtcars)
# 10. See what type of R object a variable is.
class(mtcars$mpg)
mean(trees$Girth)
trees["ghRatio"] = trees$Girth/trees$Height
trees  #run this to check that the new variable was added
install.packages("tibbletime")
install.packages("dataRetrieval")
trees
?subset
bigTrees <- subset(trees, Girth > 15.0)
bigTrees
trees$Volume = NULL
trees
bigTrees <- subset(trees, Girth > 15.0)
bigTrees
plot(bigTrees, x=Girth, y=Height)
plot(bigTrees, x=bigTrees$Girth, y=bigTrees$Height)
plot(bigTrees$Girth,bigTrees$Height)
?arrange
plot(bigTrees$Girth,bigTrees$Height)
?arrange
??arrange
?sort
bigTrees[order(ghRatio),]
bigTrees[order(bigTrees$ghRatio),]
bigTrees[order(bigTrees$Girth),]
bigTrees[order(bigTrees$Girth), descending = TRUE]
bigTrees[-order(bigTrees$Girth),]
bigTrees[order(-bigTrees$Girth),]
bigTrees[order(-bigTrees$Girth),]
bigTrees
bigTrees[order(-bigTrees$Girth),]
bigTrees
bigTrees[order(-bigTrees$Girth),]
bigTrees
data()
HairEyeColor
data("AirPassengers")
AirPassengers
ChickWeight
airmiles
airquality
cars
nhtemp
precip
presidents
# 19. Practice. Let's look at the dataset presidents
presidents
presidents[" "] =
# 20. Practice. Create a data subset called popular, where the
# Qtr 4 approval rating is > 60. See #17 as an example.
popular <- subset(popular, Qtr4 > 60)
presidents[" "] =
# 20. Practice. Create a data subset called popular, where the
# Qtr 4 approval rating is > 60. See #17 as an example.
popular <- subset(presidents, Qtr4 > 60)
presidents[" "] =
# 20. Practice. Create a data subset called popular, where the
# Qtr 4 approval rating is > 60. See #17 as an example.
popular <- subset(presidents, presidents$Qtr4 > 60)
presidents
presidents$Qtr4
str(presidents)
str(rivers)
str(sleep)
sleep
uspop
volcano
swiss
str(state.area)
str(state.region)
data.frame(presidents)
str(presidents)
as.data.frame(presidents)
str(precip)
str(occupationalStatus)
str(pressure)
pressure
str(moreley)
str(morley)
morley
str(mdeahts)
str(mdeaths)
str(longley)
longley
islands
iris
beaver
beaver1
beaver2
beaver1
activeData <- subset(beaver1, beaver1$activ== 1)
activeData
# 21. Find the mean temp for when the beaver was active.
# Use activeData.
mean(activeData$temp)
activeData["diffTemp"] = temp - meanTemp
# 22. Find the mean temp for when the beaver was active.
# Use activeData.
meanTemp <- mean(activeData$temp)
activeData["diffTemp"] = temp - meanTemp
activeData["diffTemp"] = activeData$temp - activeData$meanTemp
activeData
# 22. Find the mean temp for when the beaver was active.
# Use activeData.
meanTemp <- mean(activeData$temp)
meanTemp
activeData["diffTemp"] = activeData$temp - meanTemp
activeData
# 22. Find the mean temp for when the beaver was active.
# Use activeData.
meanTemp <- mean(activeData$temp)
activeData["diffTemp"] = activeData$temp - meanTemp
activeData
# 24. Let's create a scatterplot looking at the relationship between Girth and Height.
plot(bigTrees$Girth,bigTrees$Height)
# We have been using built-in functions in R. What other built in functions are there?
builtins()
?cut
?as.table
?as.vector
?attributes
attributes(bigTrees)
attributes(trees)
# We have been using built-in functions in R. What other built in functions are there?
builtins()
# 22. Practice. Create a data subset called activeData, where activ == 1.
# This is the data when the beaver was awake. See #17 as an example.
activeData <- subset(beaver1, beaver1$activ == 1)
# 22. Find the mean temp for when the beaver was active.
# Use activeData.
meanTemp <- mean(activeData$temp)
activeData["diffTemp"] = activeData$temp - meanTemp
activeData
?plot
plot(activeData, activeData$time, activeData$temp, l)
plot(activeData, activeData$time, activeData$temp, type=l)
plot(activeData, activeData$time, activeData$temp, type="l")
plot(activeData$time, activeData$temp, type="l")
plot(activeData$time, activeData$temp)
plot(activeData$time, activeData$diffTemp)
plot(activeData$time, activeData$temp)
plot(beaver1$time, activeData$temp)
plot(beaver1$time, beaver1$temp)
?plot
plot(beaver1$time, beaver1$temp, col=activ)
plot(beaver1$time, beaver1$temp, col=beaver1$activ)
?plot
# 1. There are some data sets already loaded in R. Let's look at mtcars.
mtcars
# 2. To see more datasets built into R, run data():
data()
# 3. Get the dimensions of a dataset using dim().
dim(mtcars)
# 4. Get a quick statistical summary of a dataset using summary().
summary(mtcars)
# 5. Figure out what the variables are in a dataset using names()
names(mtcars)
# 6. Access one variable from a dataset using the $ to separate
# the dataset name and the variable.
mtcars$mpg
# 7. Take the mean of one variable from a dataset using mean()
mean(mtcars$mpg)
# 8. Display the structure of mtcars using str()
# This is useful for seeing the data types of each variable.
str(mtcars)
# 9. See what type of R object mtcars is using class().
class(mtcars)
# 10. See what type of R object a variable is.
class(mtcars$mpg)
# 22. Practice. Create a data subset called activeData, where activ == 1.
# This is the data when the beaver was awake. See #17 as an example.
activeData <- subset(beaver1, beaver1$activ == 1)
meanTemp <- mean(activeData$temp)
activeData["diffTemp"] = activeData$temp - meanTemp
activeData
# 24. Let's use the beaver1 dataset. Make a plot using plot() showing the relationship
# between time vs. temp.
plot(beaver1$time,beaver1$temp)
hist(beaver1$temp)
# 27. Make a line chart of days and temp
plot(beaver1$day, beaver1$temp)
str(beaver1)
plot(beaver1$time,beaver1$temp)
hist(beaver1$temp)
beaver2
par(mfrow=c(2,1))
plot(beaver1$temp, beaver1$time)
plot(beaver2$temp, beaver2$time)
plot(beaver1$temp, beaver1$time)
par(mfrow=c(2,2))
plot(beaver1$temp, beaver1$time)
plot(beaver2$temp, beaver2$time)
par(mfrow=c(1,2))
plot(beaver1$temp, beaver1$time)
plot(beaver2$temp, beaver2$time)
par(mfrow=c(1,2))
plot(beaver1$time, beaver1$temp)
plot(beaver2$time, beaver2$temp)
plot(beaver1$time, beaver1$temp, main="beaver one")
plot(beaver2$time, beaver2$temp, main="beaver two")
par(mfrow=c(1,2))
plot(beaver1$time, beaver1$temp, main="beaver one")
plot(beaver2$time, beaver2$temp, main="beaver two")
par(mfrow=c(1,2))
plot(beaver1$time, beaver1$temp, main="beaver one")
plot(beaver2$time, beaver2$temp, main="beaver two")
par(mfrow=c(1,2))
plot(beaver1$time, beaver1$temp)
hist(beaver1$temp)
hist(beaver1$temp, main="")
par(mfrow=c(1,2))
plot(beaver1$time, beaver1$temp)
hist(beaver1$temp, main="")
par(mfrow=c(1,2))
plot(beaver1$time, beaver1$temp, main="temp over time")
hist(beaver1$temp, main="temp frequency")
par(mfrow=c(1,2))
plot(beaver1$time, beaver1$temp, main="scatterplot")
hist(beaver1$temp, main="histogram")
par(mfrow=c(1,2))
plot(beaver1$time, beaver1$temp, main="scatterplot")
hist(beaver1$temp, main="histogram")
# 28. Create a boxplot.
boxplot(beaver1$temp)
?boxplot
# 28. Create a boxplot.
boxplot(beaver1$day ~ beaver1$temp)
# 28. Create a boxplot.
boxplot(beaver1$time ~ beaver1$temp)
# 28. Create a boxplot.
boxplot(beaver1$temp)
# We have been using built-in functions in R. What other built in functions are there?
builtins()
par(mfrow=c(1,2)) #this creates one plot with 2 panels
plot(beaver1$time, beaver1$temp, main="scatterplot")
hist(beaver1$temp, main="histogram")
dev.off()
par(mfrow=c(1,2)) #this creates one plot with 2 panels
plot(beaver1$time, beaver1$temp, main="scatterplot")
hist(beaver1$temp, main="histogram")
dev.off()
par(mfrow=c(1,2)) #this creates one plot with 2 panels
plot(beaver1$time, beaver1$temp, main="scatterplot")
hist(beaver1$temp, main="histogram")
par(mfrow=c(1,1))
boxplot(beaver1$temp)
load(readxl)
library(readxl)
# 28. Practice. Using the mtcars dataset, make a scatterplot
# of the variables
plot(mtcars$displ, mtcars$hp)
# 28. Practice. Using the mtcars dataset, make a scatterplot
# of the variables
plot(mtcars$mpg, mtcars$hp)
# 1. There are some data sets already loaded in R. Let's look at mtcars.
mtcars
# 2. To see more datasets built into R, run data():
data()
bigTrees <- bigTrees[order(bigTrees$Girth),]
bigTrees
bigTrees <- bigTrees[order(-bigTrees$Girth),]
bigTrees
beaver1
activeBeaver["diffTemp"] = activeBeaver$temp - meanTemp
activeBeaver
# 22. Practice. Create a data subset called activeBeaver, where activ == 1.
# This is the data when the beaver was awake. See #17 as an example.
activeBeaver <- subset(beaver1, beaver1$activ == 1)
meanTemp <- mean(activeBeaver$temp)
activeBeaver["diffTemp"] = activeBeaver$temp - meanTemp
activeBeaver
# 25. Let's use the beaver1 dataset.
# Make a scatter plot using plot() with x=time and y=temp
plot(beaver1$time,beaver1$temp)
# 26. Make a histogram of the temp variable.
hist(beaver1$temp)
# 27. Put the two plots side by side.
par(mfrow=c(1,2)) #this creates one plot with 2 panels
plot(beaver1$time, beaver1$temp, main="scatterplot")
hist(beaver1$temp, main="histogram")
par(mfrow=c(1,2)) #this creates one plot with 2 panels
plot(beaver1$time, beaver1$temp, main="scatterplot")
hist(beaver1$temp, main="histogram")
# 29. Practice. Using the mtcars dataset, make a histogram of the mpg variable
hist(mtcars$mpg)
beaver1
beaver1
# 22. Practice. Create a data subset called activeBeaver, where activ == 1.
# This is the data when the beaver was awake. See #17 as an example.
activeBeaver <- subset(beaver1, beaver1$activ == 1)
activeBeaver
setwd("~/Desktop/BeginningR")
airbnb <- read_excel("airbnb.xlsx")
airbnb
View(airbnb)
airbnb <- read_excel("airbnb.xlsx")
airbnb
hist(`Room Type`)
hist(`Room Type`)
hist(airbnb$`Room Type`)
airbnb
plot(airbnb$Price, airbnb$Rating)
par(mfrow=c(1,1)) #reset back to single plot
par(mfrow=c(1,1))
View(airbnb)
singles <- subset(airbnb, airbnb$Beds == 1)
singles
# 37.
plot(airbnb$NumReviews, airbnb$Rating)
# 37. Is there a relationship between num of reviews and rating?
# Create a scatter plot
barplot(airbnb$`Room Type`)
# 37. Is there a relationship between num of reviews and rating?
# Create a scatter plot
barplot(airbnb$`Room Type`)
# 37. Is there a relationship between num of reviews and rating?
# Create a scatter plot
barplot(airbnb$NumReviews, airbnb$Rating)
# 37. Is there a relationship between num of reviews and rating?
# Create a scatter plot
plot(airbnb$NumReviews, airbnb$Rating)
# 37. Is there a relationship between num of reviews and rating?
# Create a scatter plot
plot(airbnb$NumReviews, airbnb$Rating, pch=19)
# draw a regression line.
scatter.smooth(airbnb$NumReviews, airbnb$Rating)  # scatterplot
# draw a regression line.
scatter.smooth(airbnb$NumReviews, airbnb$Rating, pch=19)  # scatterplot
scatter.smooth
?scatter.smooth
# calculate the correlation between NumReviews and Rating
cor(airbnb$NumReviews, airbnb$Rating)
# 37. Is there a relationship between num of reviews and rating?
# Create a scatter plot with filled dots.
plot(airbnb$NumReviews, airbnb$Rating, pch=19)
# 37. Is there a relationship between num of reviews and rating?
# Create a scatter plot with filled dots.
plot(airbnb$NumReviews, airbnb$Rating, pch=19)
# draw a LOESS curve.
scatter.smooth(airbnb$NumReviews, airbnb$Rating, pch=19)  # scatterplot
# calculate the correlation between NumReviews and Rating
cor(airbnb$NumReviews, airbnb$Rating)
# build a linear model
linearMod <- lm(NumReviews ~ Rating, data=airbnb)
# see the model summary
summary(linearMod)
# build a linear model
linearMod <- lm(NumReviews ~ Rating, data=singles)
# see the model summary
summary(linearMod)
# 37. Is there a relationship between num of reviews and rating?
# Create a scatter plot with filled dots.
plot(airbnb$NumReviews, airbnb$Rating, pch=19)
# draw a LOESS curve.
scatter.smooth(airbnb$NumReviews, airbnb$Rating, pch=19)  # scatterplot
# calculate the correlation between NumReviews and Rating
cor(airbnb$NumReviews, airbnb$Rating)
# build a linear model
linearMod <- lm(NumReviews ~ Rating, data=airbnb)
# see the model summary
summary(linearMod)
# 37. Is there a relationship between num of reviews and rating?
# Create a scatter plot with filled dots.
plot(airbnb$beds, airbnb$Rating, pch=19)
# 37. Is there a relationship between num of reviews and rating?
# Create a scatter plot with filled dots.
plot(airbnb$Beds, airbnb$Rating, pch=19)
# 37. Is there a relationship between num of reviews and rating?
# Create a scatter plot with filled dots.
plot(airbnb$Price, airbnb$Rating, pch=19)
NumReviews
# 37. Is there a relationship between num of reviews and rating?
# Create a scatter plot with filled dots.
plot(airbnb$NumReviews, airbnb$Rating, pch=19)
# draw a LOESS curve.
scatter.smooth(airbnb$NumReviews, airbnb$Rating, pch=19)  # scatterplot
# calculate the correlation between NumReviews and Rating
cor(airbnb$NumReviews, airbnb$Rating)
# build a linear model
linearMod <- lm(NumReviews ~ Rating, data=airbnb)
# see the model summary
summary(linearMod)
singles <- subset(airbnb, airbnb$Beds == 1)
singles
# 37. Is there a relationship between num of reviews and rating?
# Create a scatter plot with filled dots.
plot(singles$NumReviews, singles$Rating, pch=19)
# 36. Is there a relationship between num of reviews and rating?
# Create a scatter plot with filled dots.
plot(airbnb$NumReviews, airbnb$Rating, pch=19)
# draw a LOESS curve.
scatter.smooth(airbnb$NumReviews, airbnb$Rating, pch=19)  # scatterplot
# calculate the correlation between NumReviews and Rating
cor(airbnb$NumReviews, airbnb$Rating)
# build a linear model
linearMod <- lm(NumReviews ~ Rating, data=airbnb)
# build a linear model
linearMod <- lm(Rating ~ NumReviews, data=airbnb)
# see the model summary
summary(linearMod)
# build a linear model
linearMod <- lm(Price ~ Rating, data=airbnb)
# see the model summary
summary(linearMod)
# build a linear model
linearMod <- lm(Beds ~ Price, data=airbnb)
# see the model summary
summary(linearMod)
# 36. Is there a relationship between num of reviews and rating?
# Create a scatter plot with filled dots.
plot(airbnb$Beds, airbnb$Price, pch=19)
# build a linear model
linearMod <- lm(NumReviews ~ Rating, data=airbnb)
# see the model summary
summary(linearMod)
# 25. Let's use the beaver1 dataset.
# Make a scatter plot using plot() with x=time and y=temp
plot(beaver1$time,beaver1$temp)
# 26. Make a histogram of the temp variable.
hist(beaver1$temp)
# 27. Put the two plots side by side.
par(mfrow=c(1,2)) #this creates one plot with 2 panels
plot(beaver1$time, beaver1$temp, main="scatterplot")
par(mfrow=c(1,2)) #this creates one plot with 2 panels
plot(beaver1$time, beaver1$temp, main="scatterplot")
hist(beaver1$temp, main="histogram")
par(mfrow=c(1,1)) #reset back to single plot
par(mfrow=c(1,1))
# 38. Calculate the correlation between NumReviews and Rating
cor(airbnb$NumReviews, airbnb$Rating)
